{"ast":null,"code":"var _jsxFileName = \"/Users/Palmford/Downloads/c4c-message-board-main/client/src/chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\n//adds a zero in front of the minutes if the minutes are less than 10\n//converts the hours from military time to standard time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getTime() {\n  var time = new Date();\n  const hours = time.getHours() > 12 ? time.getHours() - 12 : time.getHours();\n  const mins = (time.getMinutes() < 10 ? '0' : '') + time.getMinutes();\n  const morningVsAfternoon = time.getHours() < 12 ? 'AM' : 'PM';\n  return hours + \":\" + mins + morningVsAfternoon;\n}\nfunction Chat({\n  socket,\n  username,\n  room\n}) {\n  _s();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  //sends the message as long as the message box isn't empty\n  //adds the date with the message in the form hour: minute\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: getTime()\n      };\n\n      //adds the current message to the list of messsages\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  //adds the new message to the message list\n  useEffect(() => {\n    const receiveMessage = data => {\n      setMessageList(list => [...list, data]);\n    };\n    socket.on(\"receive_message\", receiveMessage);\n    return () => {\n      socket.off(\"receive_message\", receiveMessage);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Message Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        placeholder: \"Type message here\",\n        maxlength: \"128\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        },\n        onKeyPress: event => {\n          event.key === \"Enter\" && sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n        className: \"message-holder\",\n        children: messageList.toReversed().map(messageContent => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: [messageContent.author, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \" \\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","ScrollToBottom","jsxDEV","_jsxDEV","getTime","time","Date","hours","getHours","mins","getMinutes","morningVsAfternoon","Chat","socket","username","room","_s","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","emit","list","receiveMessage","data","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","maxlength","onChange","event","target","onKeyPress","key","onClick","toReversed","map","messageContent","id","_c","$RefreshReg$"],"sources":["/Users/Palmford/Downloads/c4c-message-board-main/client/src/chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\n//adds a zero in front of the minutes if the minutes are less than 10\n//converts the hours from military time to standard time\nfunction getTime() {\n    var time = new Date();\n    const hours = (time.getHours() > 12 ? time.getHours() - 12 : time.getHours());\n    const mins = (time.getMinutes() < 10 ? '0' : '') + time.getMinutes();\n    const morningVsAfternoon = (time.getHours() < 12 ? 'AM': 'PM');\n    return hours + \":\" + mins + morningVsAfternoon;\n}\nfunction Chat({ socket, username, room}) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  //sends the message as long as the message box isn't empty\n  //adds the date with the message in the form hour: minute\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time : getTime(),\n      };\n\n      //adds the current message to the list of messsages\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n      \n    }\n  };\n\n//adds the new message to the message list\n  useEffect(() => {\n    const receiveMessage = (data) => {\n      setMessageList((list) => [...list, data]);\n    };\n  \n    socket.on(\"receive_message\", receiveMessage);\n  \n    return () => {\n      socket.off(\"receive_message\", receiveMessage);\n    };\n  }, [socket]);\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p>Message Board</p>\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={currentMessage}\n          placeholder=\"Type message here\"\n          maxlength=\"128\" \n          onChange={(event) => {\n            setCurrentMessage(event.target.value);\n          }}\n          \n          onKeyPress={(event) => {\n            event.key === \"Enter\" && sendMessage();\n          }}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n      <div className=\"chat-messages\">\n        <ScrollToBottom className=\"message-holder\">\n          {messageList.toReversed().map((messageContent) => {\n            return (\n              <div className=\"message\">\n                <div>\n                  <div className=\"message-content\">\n                    <p>{messageContent.message}</p>\n                  </div>\n                  <div className=\"message-info\">\n                    <p id=\"author\">{messageContent.author} </p>\n                    <p> &nbsp;</p>\n                    <p id=\"time\">{messageContent.time}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ScrollToBottom>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}